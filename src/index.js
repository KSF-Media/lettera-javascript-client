/**
 * Lettera
 * KSF Media's articles service
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.0.1-SNAPSHOT
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Alignment', 'model/Article', 'model/ArticleType', 'model/ArticleTypeDetails', 'model/Author', 'model/Block', 'model/BoxInfo', 'model/BoxType', 'model/Category', 'model/EventType', 'model/ImageInfo', 'model/ListArticle', 'model/Notification', 'model/Paper', 'model/RelatedArticle', 'api/ArticlesApi', 'api/CategoriesApi', 'api/ListsApi', 'api/NotifiersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/Alignment'), require('./model/Article'), require('./model/ArticleType'), require('./model/ArticleTypeDetails'), require('./model/Author'), require('./model/Block'), require('./model/BoxInfo'), require('./model/BoxType'), require('./model/Category'), require('./model/EventType'), require('./model/ImageInfo'), require('./model/ListArticle'), require('./model/Notification'), require('./model/Paper'), require('./model/RelatedArticle'), require('./api/ArticlesApi'), require('./api/CategoriesApi'), require('./api/ListsApi'), require('./api/NotifiersApi'));
  }
}(function(ApiClient, Alignment, Article, ArticleType, ArticleTypeDetails, Author, Block, BoxInfo, BoxType, Category, EventType, ImageInfo, ListArticle, Notification, Paper, RelatedArticle, ArticlesApi, CategoriesApi, ListsApi, NotifiersApi) {
  'use strict';

  /**
   * KSF_Medias_articles_service.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Lettera = require('index'); // See note below*.
   * var xxxSvc = new Lettera.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Lettera.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Lettera.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Lettera.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The Alignment model constructor.
     * @property {module:model/Alignment}
     */
    Alignment: Alignment,
    /**
     * The Article model constructor.
     * @property {module:model/Article}
     */
    Article: Article,
    /**
     * The ArticleType model constructor.
     * @property {module:model/ArticleType}
     */
    ArticleType: ArticleType,
    /**
     * The ArticleTypeDetails model constructor.
     * @property {module:model/ArticleTypeDetails}
     */
    ArticleTypeDetails: ArticleTypeDetails,
    /**
     * The Author model constructor.
     * @property {module:model/Author}
     */
    Author: Author,
    /**
     * The Block model constructor.
     * @property {module:model/Block}
     */
    Block: Block,
    /**
     * The BoxInfo model constructor.
     * @property {module:model/BoxInfo}
     */
    BoxInfo: BoxInfo,
    /**
     * The BoxType model constructor.
     * @property {module:model/BoxType}
     */
    BoxType: BoxType,
    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category: Category,
    /**
     * The EventType model constructor.
     * @property {module:model/EventType}
     */
    EventType: EventType,
    /**
     * The ImageInfo model constructor.
     * @property {module:model/ImageInfo}
     */
    ImageInfo: ImageInfo,
    /**
     * The ListArticle model constructor.
     * @property {module:model/ListArticle}
     */
    ListArticle: ListArticle,
    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification: Notification,
    /**
     * The Paper model constructor.
     * @property {module:model/Paper}
     */
    Paper: Paper,
    /**
     * The RelatedArticle model constructor.
     * @property {module:model/RelatedArticle}
     */
    RelatedArticle: RelatedArticle,
    /**
     * The ArticlesApi service constructor.
     * @property {module:api/ArticlesApi}
     */
    ArticlesApi: ArticlesApi,
    /**
     * The CategoriesApi service constructor.
     * @property {module:api/CategoriesApi}
     */
    CategoriesApi: CategoriesApi,
    /**
     * The ListsApi service constructor.
     * @property {module:api/ListsApi}
     */
    ListsApi: ListsApi,
    /**
     * The NotifiersApi service constructor.
     * @property {module:api/NotifiersApi}
     */
    NotifiersApi: NotifiersApi
  };

  return exports;
}));
