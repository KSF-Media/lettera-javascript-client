/**
 * Lettera
 * KSF Media's articles service
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Category from './Category';

/**
 * The CategoryHierarchy model module.
 * @module model/CategoryHierarchy
 * @version 1.0.0
 */
class CategoryHierarchy {
    /**
     * Constructs a new <code>CategoryHierarchy</code>.
     * @alias module:model/CategoryHierarchy
     * @param name {module:model/Category} 
     * @param subcategories {Array.<module:model/Category>} 
     */
    constructor(name, subcategories) { 
        
        CategoryHierarchy.initialize(this, name, subcategories);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, subcategories) { 
        obj['name'] = name;
        obj['subcategories'] = subcategories;
    }

    /**
     * Constructs a <code>CategoryHierarchy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CategoryHierarchy} obj Optional instance to populate.
     * @return {module:model/CategoryHierarchy} The populated <code>CategoryHierarchy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CategoryHierarchy();

            if (data.hasOwnProperty('name')) {
                obj['name'] = Category.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('subcategories')) {
                obj['subcategories'] = ApiClient.convertToType(data['subcategories'], [Category]);
            }
        }
        return obj;
    }


}

/**
 * @member {module:model/Category} name
 */
CategoryHierarchy.prototype['name'] = undefined;

/**
 * @member {Array.<module:model/Category>} subcategories
 */
CategoryHierarchy.prototype['subcategories'] = undefined;






export default CategoryHierarchy;

